- if @user.deleted?
  %p
    The content you were looking for has been deleted
- elsif @user.private?
  %p
    #{@user.name}'s profile is private
- else
  = content_for :meta do
    %meta{property: 'og:site_name', content: SITE_TITLE}/
    %meta{property: 'og:type', content: 'website'}/
    - photo_url = @user.photo_url('big')
    - unless photo_url =~ /\Ahttp/
      - photo_url = asset_url(photo_url)
    %meta{property: 'og:image', content: photo_url}/
    %meta{property: 'og:url', content: user_url(@user.id)}/
    %meta{property: 'og:title', content: @user.name}/
    %meta{property: 'og:description', content: @user.about}/
  = javascript_include_tag :users
  .user_header
    .avatar{title: @user.name}
      = image_tag(@user.photo_url('big'), alt: @user.name, width: 200, loading: 'lazy')
    .user_details

      %h1.name
        = @user.name

      - if !@user.about.blank?
        .user_bio
          = simple_format @user.about

      = render partial: 'user_metadata', locals: { user: @user }

      .badges
        - @user.user_badges.sorted.each do |userbadge|
          - badge = userbadge.badge
          = link_to image_tag(badge.image_path, alt: badge.name, title: badge.name, width: 32, height: 32, loading: 'lazy'), badge_path(badge.id)

  .clear.vertical_spacer

  .user_activity

    - if @user.discussions.size > 0
      .content_heading
        %h2
          Discussions (#{@user.discussions.size})
        .toggle_link
          = link_to "show discussions", '#', id: "toggle_discussions"
      #user_discussions{class: 'hidden'}
        = render partial: 'user_discussions', locals: { discussions: @user.discussions }

    .clear.vertical_spacer

    - if @user.comments.size > 0
      .content_heading
        %h2
          Comments (#{@user.comments.size})
        .toggle_link
          = link_to "show comments", '#', id: "toggle_comments"
      #user_comments{class: 'hidden'}
        = render partial: 'user_comments', locals: { comments: @user.comments }

  .clear.vertical_spacer